#!/usr/bin/python3
import sys
import os
import argparse


def suppress_keyboard_interrupt_message():
    """Prevent unsightly KeyboardInterrupt tracebacks.

    Nothing will be printed to the terminal after an uncaught
    :class:`exceptions.KeyboardInterrupt`.
    Inspired by DNF.

    """
    old_excepthook = sys.excepthook

    def new_hook(type, value, traceback):
        if type != KeyboardInterrupt:
            old_excepthook(type, value, traceback)
        else:
            pass

    sys.excepthook = new_hook

suppress_keyboard_interrupt_message()
if __name__ != "__main__":
    sys.stderr.write('The executable for GSMT module must not be imported.')
    sys.exit(1)

here = sys.path[0]
if here != '/usr/bin':
    GSMT_toplevel = os.path.dirname(here)
    sys.path[0] = GSMT_toplevel

from GSMT.daemon import Daemon

parser = argparse.ArgumentParser(
    prog='gsmt-daemon', formatter_class=argparse.ArgumentDefaultsHelpFormatter,
    description='GSMT - Game Server Managment Tool \n Useful tool for '
                'server managment.')
parser.add_argument('-v', '--verbose', action='store_true',
                    help="Log debug messages.")
parser.add_argument('-f', '--foreground', action='store_true',
                    help="Do not fork stay in foregroud.")
parser.add_argument('-d', '--directory', default="/etc/GSMT",
                    help="Path to config directory.")
parser.add_argument('-P', '--port', type=int, default=8000,
                    help="Port for GSMT server.")
parser.add_argument('-a', '--adress', default="localhost",
                    help="Adress for GSMT server.")
parser.add_argument('-u', '--user',
                    help="User under who to run the daemon.")
parser.add_argument('-g', '--group',
                    help="Group under who to run the daemon.")
args = parser.parse_args()

daemon = Daemon(path=args.directory, verbose=args.verbose,
                foreground=args.foreground, port=args.port, adress=args.adress,
                user=args.user, group=args.group)
daemon.start()
